(window.webpackJsonp=window.webpackJsonp||[]).push([[25],{491:function(e,t,a){"use strict";a.r(t);var s=a(2),r=Object(s.a)({},(function(){var e=this,t=e.$createElement,a=e._self._c||t;return a("ContentSlotsDistributor",{attrs:{"slot-key":e.$parent.slotKey}},[a("h1",{attrs:{id:"day-2-of-week-4-at-codeworks"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#day-2-of-week-4-at-codeworks"}},[e._v("#")]),e._v(" Day 2 of Week 4 at Codeworks")]),e._v(" "),a("p",[a("strong",[e._v("01/05/2021")])]),e._v(" "),a("h2",{attrs:{id:"what-are-the-three-states-of-a-promise"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#what-are-the-three-states-of-a-promise"}},[e._v("#")]),e._v(" What are the three states of a promise?")]),e._v(" "),a("p",[e._v("There are three states of a promise. They follow with the logic of how a promise functions based on either result is passed. They are Pending, Resolved, & Rejected.")]),e._v(" "),a("h2",{attrs:{id:"how-do-promises-seek-to-avoid-callback-hell"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#how-do-promises-seek-to-avoid-callback-hell"}},[e._v("#")]),e._v(" How do promises seek to avoid callback hell?")]),e._v(" "),a("p",[e._v("Promises have a trick up their sleave in reguard to callbackHell. This trick is the best part of a promise which is called chaining and allows code to be easier to read.")]),e._v(" "),a("h2",{attrs:{id:"what-is-the-difference-between-then-catch"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#what-is-the-difference-between-then-catch"}},[e._v("#")]),e._v(" What is the difference between .then() & .catch()?")]),e._v(" "),a("p",[e._v("Promises have two different methods for dealing with data. The .then() method is in reguard to dealing with data in the case if a promise has been resolved. The .catch() method is in reguard if the promise is rejected.")]),e._v(" "),a("p",[e._v("Afternoon Project url: https://github.com/Jacob-Gruver/winter2020-mvc-gregslist")])])}),[],!1,null,null,null);t.default=r.exports}}]);